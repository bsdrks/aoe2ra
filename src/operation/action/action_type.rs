use crate::parser::{
    Parse,
    Parser,
};

#[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub enum ActionType {
    AddAttribute,
    AiCommand,
    AiInteract,
    AiMove,
    AiQueue,
    AiWaypoint,
    AttackGround,
    BackToWork,
    Build,
    Buy,
    Chapter,
    Create,
    DeAttackMove,
    DeAutoScout,
    DeQueue,
    Delete,
    DropRelic,
    Flare,
    Follow,
    Formation,
    Game,
    GatherPoint,
    GiveAttribute,
    Guard,
    Interact,
    Move,
    MultiQueue,
    Order,
    Patrol,
    PostGame,
    Queue,
    Release,
    Repair,
    Research,
    Resign,
    Save,
    Sell,
    Spec,
    Stance,
    Stop,
    ToggleGate,
    TownBell,
    Tribute,
    Unknown0x23,
    Unknown0x25,
    Unknown0x29,
    Unknown0x2c,
    Unknown0x2d,
    Unknown0x82,
    Unknown0x83,
    Unknown0x8c,
    Unknown0xc4,
    Wall,
    Waypoint,
}

impl From<u8> for ActionType {
    fn from(value: u8) -> Self {
        match value {
            0x00 => Self::Interact,
            0x01 => Self::Stop,
            0x02 => Self::AiInteract,
            0x03 => Self::Move,
            0x04 => Self::Create,
            0x05 => Self::AddAttribute,
            0x06 => Self::GiveAttribute,
            0x0a => Self::AiMove,
            0x0b => Self::Resign,
            0x0f => Self::Spec,
            0x10 => Self::Waypoint,
            0x12 => Self::Stance,
            0x13 => Self::Guard,
            0x14 => Self::Follow,
            0x15 => Self::Patrol,
            0x17 => Self::Formation,
            0x1b => Self::Save,
            0x1f => Self::AiWaypoint,
            0x20 => Self::Chapter,
            0x21 => Self::DeAttackMove,
            0x23 => Self::Unknown0x23,
            0x25 => Self::Unknown0x25,
            0x26 => Self::DeAutoScout,
            0x29 => Self::Unknown0x29,
            0x2c => Self::Unknown0x2c,
            0x2d => Self::Unknown0x2d,
            0x35 => Self::AiCommand,
            0x64 => Self::AiQueue,
            0x65 => Self::Research,
            0x66 => Self::Build,
            0x67 => Self::Game,
            0x69 => Self::Wall,
            0x6a => Self::Delete,
            0x6b => Self::AttackGround,
            0x6c => Self::Tribute,
            0x6e => Self::Repair,
            0x6f => Self::Release,
            0x70 => Self::MultiQueue,
            0x72 => Self::ToggleGate,
            0x73 => Self::Flare,
            0x75 => Self::Order,
            0x77 => Self::Queue,
            0x78 => Self::GatherPoint,
            0x7a => Self::Sell,
            0x7b => Self::Buy,
            0x7e => Self::DropRelic,
            0x7f => Self::TownBell,
            0x80 => Self::BackToWork,
            0x81 => Self::DeQueue,
            0x82 => Self::Unknown0x82,
            0x83 => Self::Unknown0x83,
            0x8c => Self::Unknown0x8c,
            0xc4 => Self::Unknown0xc4,
            0xff => Self::PostGame,
            _ => unreachable!("Invalid action type: 0x{value:x}"),
        }
    }
}

impl Parse for ActionType {
    fn parse(parser: &mut Parser) -> Self {
        parser.u8().into()
    }
}
